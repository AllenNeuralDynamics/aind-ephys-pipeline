# define your preferred queues here
params.default_queue = 'my-queue-name'  // Default queue
params.gpu_queue = null  // Optional: Only set if GPU queue is needed and different from default queue

process {
    executor = 'slurm'
    queue = params.default_queue  // Default queue assignment
    debug = true

    // change max forks for specific processes to allow multiple forks
    withName: job_dispatch {
        cpus=4
        memory='32 GB'
        time='1h'
    }
    // if time is not specified, it is automatically adjusted to the maximum recording duration
    withName: preprocessing {
        cpus=16
        memory='64 GB'
    }
    withName: spikesort_kilosort4 {
        cpus=16
        memory='64 GB'
        containerOptions='--nv'
        clusterOptions='--gres=gpu:1'
        module='cuda'
        queue=params.gpu_queue ?: params.default_queue
    }
    withName: spikesort_kilosort25 {
        cpus=16
        memory='64 GB'
        containerOptions='--nv'
        clusterOptions='--gres=gpu:1'
        module='cuda'
        queue=params.gpu_queue ?: params.default_queue
    }
    withName: spikesort_spykingcircus2 {
        cpus=16
        memory='64 GB'
    }
    withName: postprocessing {
        cpus=16
        memory='64 GB'
    }
    withName: curation {
        cpus=4
        memory='32 GB'
    }
    withName: curation {
        cpus=visualization
        memory='32 GB'
    }
    withName: results_collector {
        cpus=4
        memory='32 GB'
    }
    withName: quality_control {
        cpus=16
        memory='64 GB'
    }
    withName: qc_collector {
        cpus=4
        memory='32 GB'
    }
    withName: nwb_subject {
        cpus=4
        memory='32 GB'
    }
    withName: nwb_ecephys {
        cpus=16
        memory='64 GB'
    }
    withName: nwb_units {
        cpus=4
        memory='32 GB'
    }
}

singularity {
    enabled = true
    autoMounts = true
    singularity.enabled = true
    singularity.autoMounts = true
    platform = 'linux/amd64'
    envWhitelist = ['KACHERY_ZONE', 'KACHERY_CLOUD_CLIENT_ID', 'KACHERY_CLOUD_PRIVATE_KEY']
}

dag {
    enabled = true
    file = RESULTS_PATH + '/nextflow/dag.html'
    overwrite = true
}

report {
    enabled = true
    file = RESULTS_PATH + '/nextflow/report.html'
    overwrite = true
}

timeline {
    enabled = true
    file = RESULTS_PATH + '/nextflow/timeline.html'
    overwrite = true
}

trace {
    enabled = true
    file = RESULTS_PATH + '/nextflow/trace.txt'
    overwrite = true
}
